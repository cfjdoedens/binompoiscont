% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbinom_continuous.R
\name{dbinom_continuous}
\alias{dbinom_continuous}
\title{Continuous version of dbinom(k, n, p, log = FALSE)}
\usage{
dbinom_continuous(k, n, p, log = FALSE)
}
\arguments{
\item{k}{a vector of 1 or more non negative real numbers;
so k can be a non integer number >= 0; k <= n}

\item{n}{a vector of 1 or more positive real numbers;
so n can be a non integer number >= 0; k <= n}

\item{p}{a vector of 1 or more real numbers in [0, 1]}

\item{log}{TRUE or FALSE}
}
\value{
A real number in [0, 1], which represents the chance of observing k
successes in n trials, each with probability p.
}
\description{
dbinom_continuous(k, n, p, log = FALSE) is a continuous version of
dbinom(k, n, p, log = FALSE).
In dbinom(k, n, p, log = FALSE), k and n are restricted to be non
negative whole numbers, with k <= n.
In dbinom_continuous(k, n, p, log = FALSE), both k and n can be any non
negative real number. The restriction k <= n still holds.

dbinom(k, n, p) is the probability of k successes in n trials, each with
probability p.
How to interpret this when k and n are not whole numbers?
So, how to interpret dbinom_continuous(k, n, p) for non integer values of
n and k?

The behaviour of dbinom_continuous is also different from dbinom
in the way vector arguments of length > 1 are treated.
dbinom() allows for a mix of lengths for k, n and p; but this makes
the semantics of the function less clear.
So, for dbinom_continuous, only one of k and n and p can have a length > 1.
}
\examples{
y <- dbinom_continuous(0, 300, 0.01)
print(y)
}
